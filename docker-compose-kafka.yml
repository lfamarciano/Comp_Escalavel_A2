version: '3.8'

networks:
  app-net:
    driver: bridge

volumes:
  postgres-data:
    driver: local

services:
  # --- SERVIÇOS DE INFRAESTRUTURA ---

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    networks:
      - app-net
    environment: { ZOOKEEPER_CLIENT_PORT: 2181 }
    healthcheck:
      test: echo "imok"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s


  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka
    networks:
      - app-net
    ports: ["9092:9092"]
    depends_on: 
      zookeeper: {condition: service_healthy}
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # --- CORREÇÃO DE REDE DEFINITIVA ---
      # Usamos um único 'listener' que funciona para tudo.
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_HOST}
      # --- FIM DA CORREÇÃO ---
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
